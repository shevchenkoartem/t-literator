const T_LITERATOR_CONFIGS={abecadlo:{code:"abecadlo",name:"Абецадло",year:1835,author:"Йосип Лозинський",desc:"Проєкт української (руської) латинської абетки, розроблений українським греко-католицьким священиком Йосипом Лозинським на основі польського алфавіту (абецадла). Вперше опублікований у Львові 1834 року. Спрощена версія, без особливостей етимологічного характеру з особливим вживанням é, ł, ó та ін. (наприклад, opysał замість opysaw, świato замість swiato, чи Ukraina замість Ukrajina). Також додане використання дієрезисів (ä, ë, ö, ü) для роздільного читання двох літер, які позначають голосні звуки (наприклад, Уляна – Uliana, але ліана – liäna).",link:"https://uk.wikipedia.org/wiki/%D0%90%D0%B1%D0%B5%D1%86%D0%B0%D0%B4%D0%BB%D0%BE",from:"ukr",to:"lat",useLocationInWordAlgo:!0,affectVowelNotConsonantWhenSofting:!0,beforeStartDict:{"іа":["ia","iä","iä"],"іе":["ie","ië","ië"],"іо":["io","iö","iö"],"іу":["iu","iü","iü"]},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":["ji","ji","ji"],"ю":"ju","ґ":"g","г":"h","х":"ch","ц":"c","щ":"szcz","ж":"ż","ш":"sz","ч":"cz","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"w","ф":"f","з":"z","с":"s","л":"ł","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":"ie","ю":"iu","я":"ia","ьо":"io"},softableConsonantsDict:{"д":"ď","з":"ź","л":"l","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],afterFinishDict:{"łia":"la","łiu":"lu","łie":"le","łio":"lo","łIa":"la","łIu":"lu","łIe":"le","łIo":"lo","łi":"li","łl":"ll"},substitutionForUndefinedResult:"",sortByMe:"1835Абецадлоabecadlo",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},jireckivka:{code:"jireckivka",name:"Їречківка",year:1859,author:"Йосиф Їречек",desc:"Проєкт латинської абетки для української (руської) мови, укладений Йосифом Їречеком на основі чеського правопису. «Пропозиція» Їречека опублікована 1859 року. Спрощена версія, без діялектичних ě, ü, ł, eu та ou.",link:"http://latynka.tak.today/works/proekt-jirecheka/","source-link":"https://books.google.com.ua/books?hl=uk&id=KU1dAAAAcAAJ&q=ll#v=onepage&q&f=false",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"ch","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":{affecting:"e",affected:"je"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"a",affected:"ja"},"ьо":{affecting:"o",affected:"jo"}},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],afterFinishDict:{},substitutionForUndefinedResult:"",sortByMe:"1859Їречківкаjireckivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"naukova-trad":{code:"naukova-trad",name:"Наукова (традиційна)",year:1898,author:null,desc:"В 1899 році в Берліні було видано «Інструкції для алфавітних каталогів прусських бібліотек і прусського загального каталогу» (відомі як «Прусські інструкції» – Preußische Instruktionen), в яких було запропоновано спосіб транслітерації кирилиці (оскільки книги, надруковані кирилицею, треба було хоч якось класифіковувати і заносити до каталогів).",link:"http://latynka.tak.today/works/naukovyj-trad/",from:"ukr",to:"lat",useLocationInWordAlgo:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","ь":"ʹ","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},substitutionForUndefinedResult:"",sortByMe:"1898Наукова (традиційна)naukova-trad",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"bgn-pcgn-65":{code:"bgn-pcgn-65",name:"BGN/PCGN",year:1965,author:"BGN/PCGN",desc:"Стандарт транслітерації, затверджений Палатою США з географічних назв (BGN) та Постійним комітетом з географічних назв Великої Британії (PCGN). Протягом довгих років використовувалась Організацією Об'єднаних Націй. Наразі ця версія застаріла, її [оновили](https://geonames.nga.mil/gns/html/Romanization/ROMANIZATION%20OF%20UKRAINIAN.pdf) у 2019-му році, взявши за стандарт [транслітерацію](https://latynka.xyz/?l=pasport), офіційно затверджену українським Кабміном.",link:"http://latynka.tak.today/works/bgnpcgn-1965/","source-link":"https://geonames.nga.mil/gns/html/Romanization/Romanization_Ukrainian.pdf",from:"ukr",to:"lat",beforeStartDict:{"зг":"z·h","кг":"k·h","сг":"s·h","тс":"t·s","цг":"ts·h"},dict:{"и":"y","і":"i","й":"y","я":"ya","є":"ye","ї":"yi","ю":"yu","ґ":"g","г":"h","х":"kh","ц":"ts","щ":"shch","ж":"zh","ш":"sh","ч":"ch","ь":"'","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":'"'},substitutionForUndefinedResult:"",sortByMe:"1965BGN/PCGNbgn-pcgn-65",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"volapuk-askii":{code:"volapuk-askii",name:"Смішне SMS",year:1990,author:"Вадим Антонов",desc:"Транслітерація в дусі перших спроб наших любих бабусь та дідусів написати «есемеску» на телефоні, що не підтримує кирилицю. Власне, це кодування «Воляпюк» з використанням лише літер/символів з таблиці ASCII.",from:"ukr",to:"lat",beforeStartDict:{},dict:{"а":"a","б":"6","в":"B","г":"r","Г":"F","ґ":"r'","Ґ":"r'","д":"g","Д":"D","е":"e","є":"{","ж":"}I{","з":"3","и":"u","И":"N","і":"i","ї":"i`","й":"u`","Й":"N`","к":"k","л":"Jl","м":"M","н":"H","о":"o","п":"n","П":"TT","р":"p","с":"c","т":"m","Т":"T","у":"y","ф":"qp","Ф":"(|)","х":"x","ц":"u,","ч":"4","ш":"w","щ":"w,","ь":"b","Ь":"b","ю":"IO","я":"R"},apostrophesSingleKeyDict:{"'`‘’":"'"},substitutionForUndefinedResult:"",sortByMe:"1990Смішне SMSvolapuk-askii",isEssential:!1,isNotEssential_Unconventional:!0,isNotEssential_Fun:!1,isNotEssential_Minor:!1},heohraf:{code:"heohraf",name:"Географічна",year:1996,author:"УКППТ",desc:"Транслітерація згідно з нормативною таблицею для відтворення українських власних назв засобами англійської мови у законодавчих та офіційних актах, затвердженою Українською комісією з питань правничої термінології у 1996-му році.",link:"https://uk.wikipedia.org/wiki/%D0%9B%D0%B0%D1%82%D0%B8%D0%BD%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F_%D1%83%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%BE%D1%97_%D0%BC%D0%BE%D0%B2%D0%B8",from:"ukr",to:"lat",useLocationInWordAlgo:!0,beforeStartDict:{"зг":"zgh"},dict:{"и":"y","і":"i","й":["y","i","i"],"я":["ya","ia","ia"],"є":["ye","ie","ie"],"ї":["yi","i","i"],"ю":["yu","iu","iu"],"ґ":"g","г":"h","х":"kh","ц":"ts","щ":"sch","ж":"zh","ш":"sh","ч":"ch","ь":"'","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"":""},substitutionForUndefinedResult:"",sortByMe:"1996Географічнаheohraf",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},lucukivka:{code:"lucukivka",name:"Лучуківка",year:2e3,author:"Іван Лучук",desc:"Проєкт українського латинського правопису Івана Лучука, що вийшов у 2000-му році («Ukrajinśka latynka. Korotkyj pravopys»). За основу абетки взято «їречківку», але замість ch в «лучуківці» вживається x. Правопис Лучука використовується часописом «Ї»",link:"https://zaxid.net/ukrayinska_latinka_n1429706","source-link":"https://drive.google.com/file/d/1ucN7HVuVUFUJHZ8H1iymu8hSb35zzYgm/view",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"y","і":"i","й":"j","я":"ja","є":"je","ї":"ji","ю":"ju","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:""}},softingVowelsMultiDict:{"є":{affecting:"e",affected:"je"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"a",affected:"ja"},"ьо":{affecting:"o",affected:"jo"}},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","ш","щ"],substitutionForUndefinedResult:"",sortByMe:"2000Лучуківкаlucukivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},pingvinivka:{code:"pingvinivka",name:"Пінґвінівка",year:2007,author:"Полярний Птах (з LiveJournal)",desc:"Варіант української латинки від [Полярного Птаха](https://web.archive.org/web/20190917183140/https://polar-bird.livejournal.com/profile), де для простоти засвоєння кожній літері кирилічної абетки відповідає літера латинки.",link:"https://web.archive.org/web/20190917183123/https://polar-bird.livejournal.com/220554.html",from:"ukr",to:"lat",dict:{"а":"a","б":"b","в":"v","г":"h","ґ":"g","д":"d","е":"e","є":"ë","ж":"ž","з":"z","и":"y","і":"i","ї":"ï","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"x","ц":"c","ч":"č","ш":"š","щ":"ş","ь":"q","ю":"ü","я":"ä"},otherLanguagesLettersDict:{"ё":"ö","ѕ":"dz","џ":"dž","ў":"ŭ","э":"ê","ы":"ŷ","ъ":"ô"},apostrophesSingleKeyDict:{"":""},substitutionForUndefinedResult:"",sortByMe:"2007Пінґвінівкаpingvinivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},pasport:{code:"pasport",name:"Паспортна",year:2010,author:"Кабінет Міністрів України",desc:"Офіційна транслітерація, затверджена Кабміном у 2010-му році. Спонукала Палату США з географічних назв (BGN) та Постійний комітет з географічних назв Великої Британії (PCGN) оновити свій власний стандарт [1965 року](https://latynka.xyz/?l=bgn-pcgn-65)) згідно з затвердженою КМУ транслітерацією.",link:"https://zakon.rada.gov.ua/laws/show/55-2010-%D0%BF#Text",from:"ukr",to:"lat",useLocationInWordAlgo:!0,beforeStartDict:{"зг":"zgh"},dict:{"и":"y","і":"i","й":["y","i","i"],"я":["ya","ia","ia"],"є":["ye","ie","ie"],"ї":["yi","i","i"],"ю":["yu","iu","iu"],"ґ":"g","г":"h","х":"kh","ц":"ts","щ":"shch","ж":"zh","ш":"sh","ч":"ch","ь":"","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},apostrophesSingleKeyDict:{"'`‘’":""},substitutionForUndefinedResult:"",sortByMe:"2010Паспортнаpasport",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},temivka:{code:"temivka",name:"Темівка",year:2021,author:"Тем Шевченко",desc:'Концептуальний проєкт української латинки, оснований на тотожності функцій діакритичної крапки (для пом\'якшення) та умлаута (для йотування) над голосними: ı→i⇒ï, a→ȧ⇒ä, e→ė⇒ë, o→ȯ⇒ö, u→u̇⇒ü. Викристовується Темом Шевченком, автором "руховичка" цього транслітератора.',from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!0,useLocationInWordAlgo:!1,beforeStartDict:{"йо":"'ё","ьо":"ё","дз":"ѕ","дж":"џ","ий":"y","ться":"ʦȧ","ТЬСЯ":"ТЬСЯ"},dict:{"и":"ı","і":"i","І":"İ","й":"j","я":"ä","є":"ë","ї":"ï","ю":"ü","ґ":"g","г":"h","х":"x","ц":"c","щ":"šč","ж":"ž","ш":"š","ч":"č","а":"a","е":"e","о":"o","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},otherLanguagesLettersDict:{"ё":"ö","ѕ":"dz","џ":"dž","ў":"w","э":"ɇ","ы":"ɏ","ъ":"ɉ"},apostrophesSingleKeyDict:{"'`‘’":""},specSymbolsDict:{"«":"„","»":"“","№":"#"},softingSignsMultiDict:{"ь":{affecting:"",affected:"j"}},softingVowelsMultiDict:{"є":"ė","ю":"u̇","я":"ȧ","ьо":"ȯ","ё":"ȯ"},softableConsonantsDict:{"д":"ď","з":"ź","л":"ľ","н":"ń","р":"ŕ","с":"ś","т":"ť","ц":"ć","ѕ":"dź"},unsoftableConsonants:["б","в","г","ґ","ж","к","м","п","ф","х","ч","џ","ш","щ"],afterFinishDict:{},substitutionForUndefinedResult:"*",sortByMe:"2021Темівкаtemivka",isEssential:!0,isNotEssential_Unconventional:!1,isNotEssential_Fun:!1,isNotEssential_Minor:!1},"nice-cyr":{code:"nice-cyr",name:"Гарна кирилиця",year:null,author:null,desc:"Для того, аби кирилічний текст виглядав гарно та незвично без використання додаткових шрифтів.",link:"",from:"ukr",to:"lat",dict:{"а":"ɑ","А":"Α","б":"δ","Б":"Б","в":"ɞ","В":"Β","г":"ƨ","Г":"Ƭ","ґ":"ґ","д":"∂","Д":"Ɗ","е":"ε","є":"є","ж":"ж","з":"ʒ","и":"u","И":"И","і":"ί","І":"İ","ї":"ϊ","й":"ŭ","Й":"Й","к":"κ","л":"ʌ","м":"ʍ","М":"M","н":"н","Н":"Η","о":"ο","п":"n","П":"Π","р":"ρ","с":"c","т":"m","Т":"Τ","у":"y","У":"У","ф":"ɸ","Ф":"Φ","х":"x","Х":"Ӽ","ц":"u̧","Ц":"Ա","ч":"ч","ш":"ɯ","щ":"ɰ","Щ":"Ɯ̧","ь":"ь","ю":"ю","я":"я"},otherLanguagesLettersDict:{"ё":"ε̈","ы":"ьι"},apostrophesSingleKeyDict:{"'`‘’":"’"},specSymbolsDict:{"«":"„","»":"“"},exceptionalCaseRules:{"ɰ":"Ɯ̧","ų":"Ա",x:"Ӽ","ɸ":"Φ",y:"У",m:"Τ",n:"Π","н":"Η","ʍ":"M","ŭ":"Й","ί":"İ",u:"И","ɡ":"Ɗ","г":"Ƭ","ɞ":"Β","δ":"Б","ɑ":"Α"},substitutionForUndefinedResult:"",sortByMe:"Гарна кирилицяnice-cyr",isEssential:!1,isNotEssential_Unconventional:!1,isNotEssential_Fun:!0,isNotEssential_Minor:!1},"volapuk-unicode":{code:"volapuk-unicode",name:"Кодування Воляпюк",year:null,desc:"На відміну від транслітерації, де символи замінюють так, аби вони однаково звучали, мета кодування Volapük – щоб символи виглядали максимально схожими. У цьому варіанті діакритика дозволяється.",from:"ukr",to:"lat",beforeStartDict:{},dict:{"а":"a","б":"6","в":"B","г":"r","Г":"Ƭ","ґ":"r'","Ґ":"r'","д":"g","Д":"Ɗ","е":"e","є":"€","ж":"}I{","з":"3","и":"u","И":"N","і":"i","ї":"ï","й":"ŭ","Й":"N̆","к":"k","л":"/\\","м":"M","н":"H","о":"o","п":"n","П":"TT","р":"p","с":"c","т":"m","Т":"T","у":"y","ф":"qp","Ф":"Ꝕ","х":"x","ц":"u,","ч":"4","ш":"w","щ":"w,","ь":"b","Ь":"b","ю":"IO","я":"R"},apostrophesSingleKeyDict:{"'`‘’":"’"},substitutionForUndefinedResult:"",sortByMe:"Кодування Воляпюкvolapuk-unicode",isEssential:!1,isNotEssential_Unconventional:!1,isNotEssential_Fun:!0,isNotEssential_Minor:!1},ipa:{code:"ipa",name:"Фонетична",year:null,author:null,desc:"Експерементальна транслітерація з використанням не лише латинських, а й символів міжнародного фонетичного алфавіту (IPA). Не слід сприймати як транскрипцію, адже в першу чергу ця транслітерація передає графіку. Також використовуються великі літери. Усі приголосні здатні до пом'якшення (навіть ті, що зазвичай пом'якшуються наполовину). Для спрощення м'якість передається апострофом замість символу «ʲ», а з'єднувальні перемички (наприклад, як у d͡ʒ) не використовуються.",link:"https://uk.wikipedia.org/wiki/%D0%A3%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%B0_%D1%84%D0%BE%D0%BD%D0%B5%D1%82%D0%B8%D0%BA%D0%B0",from:"ukr",to:"lat",affectVowelNotConsonantWhenSofting:!1,beforeStartDict:{},dict:{"и":"ı","і":"i","І":"İ","й":"j","я":"jɑ","є":"jɛ","ї":"ji","ю":"ju","ґ":"g","г":"ɦ","х":"x","ц":"ts","щ":"ʃtʃ","ж":"ʒ","ш":"ʃ","ч":"tʃ","а":"ɑ","е":"ɛ","о":"ɔ","у":"u","б":"b","п":"p","д":"d","т":"t","к":"k","в":"v","ф":"f","з":"z","с":"s","л":"l","м":"m","н":"n","р":"r"},otherLanguagesLettersDict:{"ѕ":"dz","џ":"dʒ","ў":"w"},apostrophesSingleKeyDict:{"'`‘’":""},softingSignsMultiDict:{"ь":{affecting:"",affected:"ʲ"}},softingVowelsMultiDict:{"є":{affecting:"ɛ",affected:"jɛ"},"ю":{affecting:"u",affected:"ju"},"я":{affecting:"ɑ",affected:"jɑ"},"ьо":{affecting:"ɔ",affected:"jɔ"}},softableConsonantsDict:{"д":"dʲ","з":"zʲ","л":"lʲ","н":"nʲ","р":"rʲ","с":"sʲ","т":"tʲ","ц":"tsʲ","б":"bʲ","в":"vʲ","г":"ɦʲ","ґ":"gʲ","ж":"ʒʲ","к":"kʲ","м":"mʲ","п":"pʲ","ф":"fʲ","х":"xʲ","ч":"tʃʲ","ш":"ʃʲ","щ":"ʃtʃʲ"},unsoftableConsonants:[],afterFinishDict:{"ʲ":"ʼ"},exceptionalCaseRules:{i:"İ"},substitutionForUndefinedResult:"",sortByMe:"Фонетичнаipa",isEssential:!1,isNotEssential_Unconventional:!0,isNotEssential_Fun:!1,isNotEssential_Minor:!1}};class DefaultConfigReaderFromGitHub{static#PROJECT_HOME_LINK="https://raw.githubusercontent.com/shevchenkoartem/t-literator-configs/master/";getConfigObject(t){if(null==t||!t.length)return{};let e=DefaultConfigReaderFromGitHub.#httpGet(DefaultConfigReaderFromGitHub.#PROJECT_HOME_LINK+`src/${t}.config`);return e=e.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1"),e=e.replace(/[\u202F\u00A0]/g," "),JSON.parse(e)}static#httpGet(t){const e="undefined"==typeof window?require("xmlhttprequest").XMLHttpRequest:XMLHttpRequest,i=new e;return i.open("GET",t,!1),i.send(null),i.responseText}}"undefined"==typeof window&&(module.exports=DefaultConfigReaderFromGitHub);class StringValueOrArrayHelpers{static toTitleCase(e){if(null==e)return null;if(Array.isArray(e)){const o=[...e];for(let t=0;t<o.length;++t)o[t]=StringValueOrArrayHelpers.toTitleCase(o[t]);return o}var i;for(let t=0;t<e.length;++t)if(null!=(i=e.charAt(t))&&i.toLowerCase()!==i.toUpperCase())return e.slice(0,t+1).toUpperCase()+e.slice(t+1);return e}static toUpperCase(t,e){if(null==t)return null;if(Array.isArray(t)){const n=[...t];for(let t=0;t<n.length;++t)n[t]=StringValueOrArrayHelpers.toUpperCase(n[t]);return n}let i=t;var o,s;for([o,s]of Object.entries(e??{}))i=i.replaceAll(o,s);return i.toUpperCase()}static toDiacriticless(t){if(null==t)return null;if(Array.isArray(t)){const i=[...t];for(let t=0;t<i.length;++t)i[t]=StringValueOrArrayHelpers.toDiacriticless(i[t]);return i}var e={"ł":"l","Ł":"L","ı":"i","İ":"I"};return null!=e[t]?e[t]:t.normalize("NFD").replace(/\p{Diacritic}/gu,"")}static flatValuesAt(t,e){const i=e?1:0;return Object.values(t).flatMap(t=>t.constructor===Object?StringValueOrArrayHelpers.flatValuesAt(t,e):t[i])}}"undefined"==typeof window&&(module.exports=StringValueOrArrayHelpers);const Hlprs="undefined"==typeof window?require("./0-string-value-or-array-helpers"):StringValueOrArrayHelpers;class NormalizedConfig{static AFFECTING="affecting";static AFFECTED="affected";#config=null;#cache={};constructor(t){this.#config={...t},this.#ensureNormalized()}get#configCopy(){return{...this.#config}}get code(){return this.#config.code}get name(){return this.#config.name}get desc(){return this.#config.desc}get link(){return this.#config.link}get from(){return this.#config.from}get to(){return this.#config.to}get year(){return this.#config.year}get useLocationInWordAlgo(){return this.#config.useLocationInWordAlgo}get affectVowelNotConsonantWhenSofting(){return this.#config.affectVowelNotConsonantWhenSofting}get dict(){return this.#config.dict}get otherLanguagesLettersDict(){return this.#config.otherLanguagesLettersDict}get unsoftableConsonants(){return this.#config.unsoftableConsonants}get softableConsonantsDict(){return this.#config.softableConsonantsDict}get softingVowelsMultiDict(){return this.#config.softingVowelsMultiDict}get softingSignsMultiDict(){return this.#config.softingSignsMultiDict}get apostrophesSingleKeyDict(){return this.#config.apostrophesSingleKeyDict}get exceptionalCaseRules(){return this.#config.exceptionalCaseRules}get specSymbolsDict(){return this.#config.specSymbolsDict}get substitutionForErrors(){return this.#config.substitutionForErrors}get beforeStartDict(){return this.#config.beforeStartDict}get afterFinishDict(){return this.#config.afterFinishDict}getProperty(t){if(this.#config.hasOwnProperty(t))return this.#configCopy[t]}get isEmpty(){return null!=this.#config}get isNormalized(){return this.#config.isNormalized}getSourceAlphabet(t,e){var i=e?"withOtherLangLetters":"withoutOtherLangLetters";this.#cache[i]||(this.#cache[i]=this.#doGetSourceAlphabet(e));i=this.#cache[i];return t?this.#makeLowerAlphabet(i):i}#doGetSourceAlphabet(e){const i=this.#config,t=[i.unsoftableConsonants,...Object.keys(i.softingSignsMultiDict),...Object.keys(i.dict),...Object.keys(i.softableConsonantsDict),...Object.keys(i.softingVowelsMultiDict),...Object.keys(i.beforeStartDict),...e?Object.keys(i.otherLanguagesLettersDict):[]];var o=t.flatMap(t=>[...t]);const s=[...new Set(o)];return s.filter(t=>!!e||!i.otherLanguagesLettersDict.hasOwnProperty(t)).sort(NormalizedConfig.alphabetOrderComparator)}#makeLowerAlphabet(t){t=t.map(t=>t.toLowerCase());return[...new Set(t)]}static alphabetOrderComparator(t,e){const i=new Set(["'","’","*"]);var o=i.has(t)!==i.has(e)?-1:1;for(const r of["AaȦȧÄä","EeĖėËë","IıİiÏï","OoȮȯÖö","UuU̇u̇Üü","YyẎẏŸÿ"]){var s=r.includes(t),n=r.includes(e);if(s||n){if(s&&n)return r.indexOf(t)-r.indexOf(e);s&&(t=r[0]),n&&(e=r[0]);break}}return o*t.localeCompare(e,"uk",{caseFirst:"upper"})}getDigraphs(){var t=this.#config;const e=[t.beforeStartDict,t.dict,t.apostrophesSingleKeyDict,t.softableConsonantsDict,t.softingVowelsMultiDict,t.softingSignsMultiDict,t.otherLanguagesLettersDict,t.afterFinishDict],i=e.flatMap(t=>Hlprs.flatValuesAt(t,!1));t=i.filter(t=>t&&1<t.length).map(t=>t.toLowerCase());return[...new Set(t)]}#ensureNormalized(){const t=this.#config;if(!t.isNormalized){t.code=t.code??"code"+Math.floor(1e3*Math.random()),t.name=t.name??"Unnamed",t.desc=t.desc??"",t.link=t.link??"",t.from=t.from??"",t.to=t.to??"",t.exceptionalCaseRules=t.exceptionalCaseRules??{},t.affectVowelNotConsonantWhenSofting=t.affectVowelNotConsonantWhenSofting??!1,t.useLocationInWordAlgo=t.useLocationInWordAlgo??!1,t.unsoftableConsonants=t.unsoftableConsonants??[],t.softableConsonantsDict=NormalizedConfig.#getNormalizedDictStructure(t.softableConsonantsDict),t.dict=NormalizedConfig.#getNormalizedDictStructure(t.dict),t.otherLanguagesLettersDict=NormalizedConfig.#getNormalizedDictStructure(t.otherLanguagesLettersDict),t.specSymbolsDict=NormalizedConfig.#getNormalizedDictStructure(t.specSymbolsDict),t.beforeStartDict=NormalizedConfig.#getNormalizedDictStructure(t.beforeStartDict),t.afterFinishDict=NormalizedConfig.#getNormalizedDictStructure(t.afterFinishDict),t.softingSignsMultiDict=NormalizedConfig.#getNormalizedMultiDictStructure(t.softingSignsMultiDict),t.softingVowelsMultiDict=NormalizedConfig.#getNormalizedMultiDictStructure(t.softingVowelsMultiDict),this.#normalizeApostrophesSingleKeyDict(),NormalizedConfig.#completeByUpperAndTitleCased(t.beforeStartDict);for(const e of[t.unsoftableConsonants,t.softableConsonantsDict,t.dict,t.otherLanguagesLettersDict,t.softingSignsMultiDict,t.softingVowelsMultiDict,t.afterFinishDict])NormalizedConfig.#completeByUpperAndTitleCased(e);t.isNormalized=!0}}#normalizeApostrophesSingleKeyDict(){const i=this.#config;let t;if(null!=i.apostrophesSingleKeyDict&&(t=Object.keys(i.apostrophesSingleKeyDict)),null!=t&&t.length){let e=0;t.forEach(t=>0==e++||delete i.apostrophesSingleKeyDict[t])}else i.apostrophesSingleKeyDict={"":""}}static#getNormalizedDictStructure(t){const e={};if(null==t)return e;for(const n of Object.keys(t)){var i=!Array.isArray(t[n]),o=Array.isArray(t[n])&&0===t[n].length,s=Array.isArray(t[n])&&3===t[n].length;e[n]=i||s?[t[n]]:o?[""]:t[n]}return e}static#getNormalizedMultiDictStructure(t){const e={};if(null==t)return e;for(const o of Object.keys(t))if(t[o].constructor!==Object){var i=t[o];const s={};s[NormalizedConfig.AFFECTED]=i,s[NormalizedConfig.AFFECTING]=i,e[o]=NormalizedConfig.#getNormalizedDictStructure(s)}else e[o]=NormalizedConfig.#getNormalizedDictStructure(t[o]);return e}static#completeByNonDiacritics(t,e){if(t.constructor===Object)for(const i of Object.values(t))i.constructor!==Object?i.length&&(1===i.length?i.push(Hlprs.toDiacriticless(i[0])):e||(i[1]=Hlprs.toDiacriticless(i[1]))):NormalizedConfig.#completeByNonDiacritics(i)}static#completeByUpperAndTitleCased(i){var t,e,o=[Hlprs.toTitleCase,Hlprs.toUpperCase];if(Array.isArray(i)){let t=new Set(i),e=new Set;for(const l of t)for(const c of o){var s=c(l);t.has(s)||e.add(s)}i.push(...e)}else for([t,e]of Object.entries(i))for(const u of o){var n,r,a=u(t);if(!i.hasOwnProperty(a))if(Array.isArray(e)){const f=[];for(const g of e)f.push(u(g));i[a]=f}else{const p={};for([n,r]of Object.entries(e)){const h=[];for(const d of r)h.push(u(d));p[n]=h}i[a]=p}}}}"undefined"==typeof window&&(module.exports=NormalizedConfig);const NormalizedCfg="undefined"==typeof window?require("./1-normalized-config"):NormalizedConfig;class ConfigsCollection{#configs={};#cachedConfigCodes=new Set;constructor(t){if(null!=t)for(const e of t)this.upsertConfig(e)}get isEmpty(){return 0===this.count&&Object.getPrototypeOf(this.#configs)===Object.prototype}get configCodes(){return[...this.#cachedConfigCodes]}get count(){return this.#cachedConfigCodes.size}hasConfig(t){return!this.isEmpty&&this.#cachedConfigCodes.has(t)}getConfig(e){if(this.hasConfig(e)){let t=this.#configs[e];return t.isNormalized||(this.#configs[e]=new NormalizedCfg(t),t=this.#configs[e]),t}}upsertConfig(t){t&&t.code;var e=!this.hasConfig(t.code);return this.#configs[t.code]=t,this.#cachedConfigCodes.add(t.code),e}deleteConfig(t){var e=this.hasConfig(t);return e&&(delete this.#configs[t],this.#cachedConfigCodes.delete(t)),e}deleteAll(){this.#configs={},this.#cachedConfigCodes.clear()}}"undefined"==typeof window&&(module.exports=ConfigsCollection);const Helpers="undefined"==typeof window?require("./0-string-value-or-array-helpers"):StringValueOrArrayHelpers,FromGitHubReader="undefined"==typeof window?require("./0-default-config-reader-from-github"):DefaultConfigReaderFromGitHub,Config="undefined"==typeof window?require("./1-normalized-config"):NormalizedConfig,Configs="undefined"==typeof window?require("./2-configs-collection"):ConfigsCollection;class Transliterator{#WORD_START="【⟨";#WORD_END="⟩】";static#UPPER_TECH_LETER="Ꙍ";static#LOWER_TECH_LETER="ꙍ";static RESULT_OTHERS_KEY="_others_";#config={};#configsCache={};#implementingGetConfigObject;#useDiacritics=!0;static#tt=0;static stringUtils={toUpperCase:function(t){return t.toLocaleUpperCase()},toLowerCase:function(t){return t.toLocaleLowerCase()},replaceLettersFromStr:function(t,e,i){return e.reduce((t,e)=>t.replaceAll(e,i),t)},removeLettersFromStr:function(t,e){return this.replaceLettersFromStr(t,e,"")}};constructor(t=new FromGitHubReader,e){let i=[];Array.isArray(t)?i=t:this.#implementingGetConfigObject=t,this.#configsCache=new Configs(i),null!=e&&this.useConfig(e)}get config(){return{...this.#config}}transliterate(t,e){var i=this.#config;this.#useDiacritics=!e;var o=this.#useDiacritics?0:1;let s=t;i.useLocationInWordAlgo&&(s=this.#markStartingPositions(s)),s=this.#replaceAllByDict(s,i.beforeStartDict,i.useLocationInWordAlgo);var n=Object.keys(i.apostrophesSingleKeyDict)[0];s=Transliterator.stringUtils.replaceLettersFromStr(s,Array.from(n),"⟨≀⟩");var r,a,l,c,e=Object.entries(i.softingVowelsMultiDict),u=Object.entries(i.softableConsonantsDict),t=Object.entries(i.softingSignsMultiDict);for([r,a]of e){for(const b of i.unsoftableConsonants){var f,g=a[Config.AFFECTED];i.useLocationInWordAlgo&&Array.isArray(g[o])&&(f=Transliterator.#getPositionalValue(g[o],2),s=s.replaceAll(b+r+this.#WORD_END,b+f+this.#WORD_END));g=Transliterator.#getPositionalValue(g[o]);s=s.replaceAll(b+r,b+g)}for(var[p,h]of u){h=i.affectVowelNotConsonantWhenSofting?p:Transliterator.#getPositionalValue(h[o]);i.useLocationInWordAlgo&&Array.isArray(a[Config.AFFECTING][o])&&(d=Transliterator.#getPositionalValue(a[Config.AFFECTING][o],2),s=s.replaceAll(p+r+this.#WORD_END,h+d+this.#WORD_END));var d=Transliterator.#getPositionalValue(a[Config.AFFECTING][o]);s=s.replaceAll(p+r,h+d)}}for([l,c]of t){for(const m of i.unsoftableConsonants)s=s.replaceAll(m+l,m+c[Config.AFFECTED][o]);for(var[D,C]of u){C=Transliterator.#getPositionalValue(C[o]);i.useLocationInWordAlgo&&Array.isArray(c[Config.AFFECTING][o])&&(y=Transliterator.#getPositionalValue(c[Config.AFFECTING][o],2),s=s.replaceAll(D+l+this.#WORD_END,C+y+this.#WORD_END));var y=Transliterator.#getPositionalValue(c[Config.AFFECTING][o]);s=s.replaceAll(D+l,C+y)}s=s.replaceAll(l,c[Config.AFFECTED][o])}return s=s.replaceAll("⟨≀⟩",i.apostrophesSingleKeyDict[n]),s=this.#replaceAllByDict(s,i.dict,i.useLocationInWordAlgo),s=this.#replaceAllByDict(s,i.otherLanguagesLettersDict,i.useLocationInWordAlgo),s=this.#replaceAllByDict(s,i.specSymbolsDict,i.useLocationInWordAlgo),i.useLocationInWordAlgo&&(s=Transliterator.stringUtils.removeLettersFromStr(s,[this.#WORD_START,this.#WORD_END])),s=this.#detectAndFixCapsLocked(s),s=this.#replaceAllByDict(s,i.afterFinishDict,i.useLocationInWordAlgo),null!=i.substitutionForUndefinedResult&&(s=s.replaceAll("undefined",i.substitutionForUndefinedResult)),s}useConfig(t){var e;this.#config.code!==t&&(this.#configsCache.hasConfig(t)||(e=this.#implementingGetConfigObject.getConfigObject(t),this.#configsCache.upsertConfig(e)),this.#config=this.#configsCache.getConfig(t))}getConfigTransliterationInfo(i,o){const s=this.#config,n={};var r=s.getSourceAlphabet(!1,!1);const a=new Set(this.#getSourceVowels(!0)),l=this.#getSoftingExemplars(s);var c,u=(t,e)=>t.hasOwnProperty(e);for(let t=0,e=1;t<r.length-1;t+=2,e+=2){const[d,D]=[r[t],r[e]],C=[];if(u(s.softingSignsMultiDict,d)){var f=t=>{null==t.upper.source||t.lower.source;var e=this.transliterate(""+(t.upper.source||"")+d)+" "+this.transliterate(""+(t.lower.source||"")+D),t=[t.upper.translated,t.lower.translated],t=Transliterator.stringUtils.removeLettersFromStr(e,t);C.push(t)};f(l.softableConsonant),f(l.unsoftableConsonant)}else{var g,p=this.transliterate(d)+" "+this.transliterate(D);if(C.push(p),i||(f=(g=this.transliterate(Transliterator.#LOWER_TECH_LETER+D+Transliterator.#LOWER_TECH_LETER))+" "+g,g=(p=this.transliterate(Transliterator.#LOWER_TECH_LETER+D))+" "+p,f=(p=function(t){return Transliterator.stringUtils.removeLettersFromStr(t,[Transliterator.#UPPER_TECH_LETER,Transliterator.#LOWER_TECH_LETER])})(f),C.push(f),f=p(g),C.push(f)),!o)if(a.has(d)){const b=this,m=function(t){return Transliterator.stringUtils.removeLettersFromStr(t,[b.transliterate(l.softableConsonant.upper.source),b.transliterate(l.softableConsonant.lower.source),b.transliterate(l.unsoftableConsonant.upper.source),b.transliterate(l.unsoftableConsonant.lower.source)])};var h=t=>{null!=t.upper.source&&null!=t.lower.source&&(t=(t=this.transliterate(t.lower.source+D))+" "+t,t=m(t),C.push(t))};s.affectVowelNotConsonantWhenSofting&&h(l.softableConsonant),h(l.unsoftableConsonant)}else u(s.softableConsonantsDict,d)&&null!=(c=l.softingSign).upper.source&&null!=c.lower.source&&(h=this.transliterate(d+c.upper.source)+" "+this.transliterate(D+c.lower.source),h=Transliterator.stringUtils.removeLettersFromStr(h,[c.upper.translated,c.lower.translated]),C.push(h))}const y=t=>null!=t&&t.length?t[t.length-1]:void 0;n[d+" "+D]=C.filter((t,e,i)=>i.map(t=>Transliterator.stringUtils.toUpperCase(y(t.split(" ")))).indexOf(Transliterator.stringUtils.toUpperCase(y(t.split(" "))))===e).map(t=>t.length&&null!=t.match(/\S.*/)?t:"—").map(t=>(t=>{var e=t.split(" "),i=e[0]===e[1],o=1<Helpers.toDiacriticless(e[0]).length&&e[0]===Transliterator.stringUtils.toUpperCase(e[1]);return 2===e.length&&(i||o)?e[1]:t})(t)).join(", ")}return(t=>{const e=Object.values(t).join(", ");var i=this.getTransliteratedAlphabet(!0).filter(t=>!e.includes(t)).join(", ");return i.length&&(t[Transliterator.RESULT_OTHERS_KEY]=i),t})(n)}#getSoftingExemplars(t){var e=this.#useDiacritics?0:1,i=Object.keys(t.softableConsonantsDict).find(t=>Transliterator.stringUtils.toUpperCase(t)===t),o=Object.keys(t.softableConsonantsDict).find(t=>Transliterator.stringUtils.toLowerCase(t)===t),s=t.unsoftableConsonants.find(t=>Transliterator.stringUtils.toUpperCase(t)===t),n=t.unsoftableConsonants.find(t=>Transliterator.stringUtils.toLowerCase(t)===t);let r,a,l,c;null!=i&&null!=o&&(r=Transliterator.#getPositionalValue(t.softableConsonantsDict[i][e],2),a=Transliterator.#getPositionalValue(t.softableConsonantsDict[o][e],2)),null!=s&&null!=n&&(l=this.transliterate(s),c=this.transliterate(n));var u=Object.keys(t.softingSignsMultiDict).find(t=>Transliterator.stringUtils.toUpperCase(t)===t),f=Object.keys(t.softingSignsMultiDict).find(t=>Transliterator.stringUtils.toLowerCase(t)===t);let g,p;return null!=u&&null!=f&&(g=Transliterator.#getPositionalValue(t.softingSignsMultiDict[u][Config.AFFECTING][e],2),p=Transliterator.#getPositionalValue(t.softingSignsMultiDict[f][Config.AFFECTING][e],2)),{softableConsonant:{upper:{source:i,translated:r},lower:{source:o,translated:a}},unsoftableConsonant:{upper:{source:s,translated:l},lower:{source:n,translated:c}},softingSign:{upper:{source:u,translated:g},lower:{source:f,translated:p}}}}getConfigSourceAlphabet(t,e){return this.#config.getSourceAlphabet(t,e)}getTransliteratedAlphabet(o,t){var e,i=this.#config;let s=[...Helpers.flatValuesAt(i.beforeStartDict,!1).map(t=>this.transliterate(t))];for(const r of[...Helpers.flatValuesAt(i.dict,!1),...Helpers.flatValuesAt(i.apostrophesSingleKeyDict,!1),...Helpers.flatValuesAt(i.softableConsonantsDict,!1),...Helpers.flatValuesAt(i.softingVowelsMultiDict,!1),...Helpers.flatValuesAt(i.softingSignsMultiDict,!1),...t?Helpers.flatValuesAt(i.otherLanguagesLettersDict,!1):[]])null!=r&&(e=[...Object.entries(i.afterFinishDict)].reduce((t,[e,i])=>t.replaceAll(e,i),r),s.push(e));s.push(...Helpers.flatValuesAt(i.afterFinishDict,!1));t=s.reduce((t,e)=>{if(null==e)return t;let i=Helpers.toDiacriticless(e).length;if(1===i&&(!o||e===Transliterator.stringUtils.toLowerCase(e)))return[...t,e];if(1<i)for(;i--;)t.push(o?Transliterator.stringUtils.toLowerCase(e.charAt(i)):e.charAt(i));return t},[]);const n=[...new Set(t)];return n.sort(Config.alphabetOrderComparator)}#markStartingPositions(t){var e=this.#config.getSourceAlphabet(!1,!0).concat([Transliterator.#UPPER_TECH_LETER,Transliterator.#LOWER_TECH_LETER]).join(""),i=new RegExp(`(?<a>^|[^${e}]+)(?<b>[${e}])`,"gu");let o=t.replaceAll(i,`$<a>${this.#WORD_START}$<b>`);return i=new RegExp(`(?<b>[${e}])(?<c>$|[^${e}]+)`,"gu"),o=o.replaceAll(i,`$<b>${this.#WORD_END}$<c>`),i=new RegExp(`(?<a>${this.#WORD_END})(?<b>['\`‘’])(?<c>${this.#WORD_START})`,"gu"),o=o.replaceAll(i,"$<b>"),o}#detectAndFixCapsLocked(t){const c=new Set(this.#config.getDigraphs().map(t=>Transliterator.stringUtils.toLowerCase(t))),u=/(?<a>\p{Lu}\p{Ll}+)(?<p>['"]*)(?<b>\p{Lu}+)|(?<c>\p{Lu}+)(?<q>['"]*)(?<d>\p{Lu}\p{Ll}+)/gu;let e=t.split(" ");for(let t=0;t<5;t++){let l=!1;if(e=e.map(t=>{for(var e;e=u.exec(t);){var i=e.groups,o=i.c||"",s=i.q||"",n=i.a||i.d,r=i.p||"",a=i.b||"";c.has(Transliterator.stringUtils.toLowerCase(n))&&(i=t,e=e.index,a=o+s+Helpers.toUpperCase(n,this.#config.exceptionalCaseRules)+r+a,t=i.slice(0,e)+a+i.slice(e+a.length)),l=l||!0}return t}),!l)break}return e.join(" ")}#replaceAllByDict(t,e,i){var o,s,n=this.#useDiacritics?0:1;let r=t;for([o,s]of Object.entries(e)){var a=s[n];i&&Array.isArray(a)&&(r=r.replaceAll(this.#WORD_START+o,this.#WORD_START+Transliterator.#getPositionalValue(a,0)),r=r.replaceAll(o+this.#WORD_END,Transliterator.#getPositionalValue(a,2)+this.#WORD_END)),r=r.replaceAll(o,Transliterator.#getPositionalValue(a))}return r}#getSourceVowels(t){const e=new Set(["А","а","Е","е","Ё","ё","Є","є","И","и","І","і","Ї","ї","О","о","У","у","Ы","ы","Э","э","Ю","ю","Я","я"]),i=this.#config.getSourceAlphabet(!1,t);return i.filter(t=>e.has(t))}#getSourceConsonants(t){const e=new Set(["Б","б","В","в","Г","г","Ґ","ґ","Д","д","Ѓ","ѓ","Ђ","ђ","Ж","ж","З","з","З́","з́","Ѕ","ѕ","Й","й","Ј","ј","К","к","Л","л","Љ","љ","М","м","Н","н","Њ","њ","П","п","Р","р","С","с","С́","с́","Т","т","Ћ","ћ","Ќ","ќ","Ў","ў","Ф","ф","Х","х","Ц","ц","Ч","ч","Џ","џ","Ш","ш","Щ","щ"]),i=this.#config.getSourceAlphabet(!1,t);return i.filter(t=>e.has(t))}#getSourceSpecialSigns(t){const e=new Set(["Ъ","ъ","Ь","ь","'","’"]),i=this.#config.getSourceAlphabet(!1,t);return i.filter(t=>e.has(t))}static#getPositionalValue(t,e){return null==e&&(e=1),Array.isArray(t)?t.length>e?t[e]:t[t.length-1]:t}}"undefined"==typeof window&&(module.exports=Transliterator);